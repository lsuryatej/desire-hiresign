name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test-api:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        working-directory: ./api
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Run database migrations
        working-directory: ./api
        env:
          POSTGRES_URL: postgresql://postgres:password@localhost:5432/app
        run: |
          alembic upgrade head
      
      - name: Lint with flake8
        working-directory: ./api
        run: |
          flake8 app tests --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app tests --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
      
      - name: Format check with black
        working-directory: ./api
        run: |
          black --check app tests
      
      - name: Run tests
        working-directory: ./api
        env:
          POSTGRES_URL: postgresql://postgres:password@localhost:5432/app
          REDIS_URL: redis://localhost:6379/0
          JWT_SECRET: test-secret-key
        run: |
          pytest --cov=app --cov-report=xml
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./api/coverage.xml
          flags: api

  lint-mobile:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for source files
        id: check_files
        working-directory: ./mobile
        run: |
          if [ -n "$(find src -name '*.ts' -o -name '*.tsx' -o -name '*.js' -o -name '*.jsx' 2>/dev/null | head -1)" ]; then
            echo "files_exist=true" >> $GITHUB_OUTPUT
          else
            echo "files_exist=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Skip (no mobile source files)
        if: steps.check_files.outputs.files_exist == 'false'
        run: echo "No TypeScript/JavaScript files found in mobile/src, skipping lint-mobile job..."
      
      - name: Setup Node.js
        if: steps.check_files.outputs.files_exist == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package.json
      
      - name: Install dependencies
        if: steps.check_files.outputs.files_exist == 'true'
        working-directory: ./mobile
        run: npm ci
      
      - name: Lint
        if: steps.check_files.outputs.files_exist == 'true'
        working-directory: ./mobile
        run: npm run lint
      
      - name: Type check
        if: steps.check_files.outputs.files_exist == 'true'
        working-directory: ./mobile
        run: npx tsc --noEmit
